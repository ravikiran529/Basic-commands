Chef follows Server-Client architecture. It works on pull based machanism unlike Ansible.
Below are the commands used to create cookbooks and make the required configuration on chef nodes.

We need to have the chef workstation, Server, Nodes setup before we start writing cookbooks.
All the work will be done from workstation machine.
    
1. Create a cookbook
    knife cookcok create file_name (old, deprecated)
    chef generate cookbook file_name
    ####################################################################
    > Above command generates a cookbook with below director structure
        cookbook_name
          |--Berksfile
          |--chefignore
          |--metadata.rb
          |--README.md
          |--recipes
              |--default.rb
          |--spec
              |--spec_helper.rb
              |--unit
                  |--recipes
                      |--default-spec.rb
          |--test
              |--recipes
                  |--default-test.rb
     > We need to create optional directories under cookbook_name as needed
          |--templates
              |--default
          |--files
              |--default
          |--attributes
     ######################################################################
2. Write a recipe file.
    vi /path/to/cookbook/recipes/default.rb
    
3. Test the cookbook
    knife cookbook test file_name (old, deprecated)
    cookstyle test file_name
    
4. upload cookbook to server & check if it is uploaded.
    knife cookbook upload file_name
    knife cookbook list
    
5. update node run_list
    knife node run_list add <node_name> file_name (or)
    Edit the node runlist >> "knife node edit <node_name>" ,add the cookbook to the list
    
6. Pull the changes from node
    sudo chef-client
    
    
Default cookbooks path on node: /var/chef/cache/cookbooks/
